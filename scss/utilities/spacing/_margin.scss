@use 'sass:map';
@use '../../config';
@use '../../mixins';

$margin: () !default;
$margin: map.deep-merge(
  (
    'm-auto': (
      'margin': auto
    ),
    'mt-auto': (
      'margin-top': auto
    ),
    'mr-auto': (
      'margin-right': auto
    ),
    'mb-auto': (
      'margin-bottom': auto
    ),
    'ml-auto': (
      'margin-left': auto
    ),
    'mx-auto': (
      'margin-left': auto,
      'margin-right': auto
    ),
    'my-auto': (
      'margin-top': auto,
      'margin-bottom': auto
    )
  ),
  $margin
);

@include mixins.generate-utilities(
  $map: $margin,
  $variants: map.get(config.$variants, 'spacing', 'margin'),
  $include: map.get(config.$utilities, 'spacing', 'margin')
);

@include mixins.generate-spacing(
  $class-name: 'm',
  $property: 'margin',
  $negative: true,
  $variants: map.get(config.$variants, 'spacing', 'margin'),
  $include: map.get(config.$utilities, 'spacing', 'margin')
);

@include mixins.generate-spacing(
  $class-name: 'mt',
  $property: 'margin-top',
  $negative: true,
  $variants: map.get(config.$variants, 'spacing', 'margin'),
  $include: map.get(config.$utilities, 'spacing', 'margin')
);

@include mixins.generate-spacing(
  $class-name: 'mr',
  $property: 'margin-right',
  $negative: true,
  $variants: map.get(config.$variants, 'spacing', 'margin'),
  $include: map.get(config.$utilities, 'spacing', 'margin')
);

@include mixins.generate-spacing(
  $class-name: 'mb',
  $property: 'margin-bottom',
  $negative: true,
  $variants: map.get(config.$variants, 'spacing', 'margin'),
  $include: map.get(config.$utilities, 'spacing', 'margin')
);

@include mixins.generate-spacing(
  $class-name: 'ml',
  $property: 'margin-left',
  $negative: true,
  $variants: map.get(config.$variants, 'spacing', 'margin'),
  $include: map.get(config.$utilities, 'spacing', 'margin')
);

@include mixins.generate-spacing(
  $class-name: 'mx',
  $property: margin-right margin-left,
  $negative: true,
  $variants: map.get(config.$variants, 'spacing', 'margin'),
  $include: map.get(config.$utilities, 'spacing', 'margin')
);

@include mixins.generate-spacing(
  $class-name: 'my',
  $property: margin-top margin-bottom,
  $negative: true,
  $variants: map.get(config.$variants, 'spacing', 'margin'),
  $include: map.get(config.$utilities, 'spacing', 'margin')
);
