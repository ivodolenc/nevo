@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use '../config';
@use '../functions';
@use 'media-queries';

@mixin _between(
  $selector: '.',
  $separator: '-',
  $prefix: null,
  $set: null,
  $variant: null,
  $pseudo: null,
  $negative: null,
  $important: null,
  $variant-separator: null,
  $pseudo-separator: null,
  $selector-name: null,
  $property-left: null,
  $property-right: null,
  $property-top: null,
  $property-bottom: null
) {
  $negative-prefix: if($negative, '-', null);

  @each $set-key, $set-value in $set {
    #{$selector}#{$variant}#{$variant-separator}#{$negative-prefix}#{$prefix}#{$selector-name}#{-y}#{$separator}#{$set-key}#{$pseudo-separator}#{$pseudo} {
      > :not([hidden]) ~ :not([hidden]) {
        #{--#{$selector-name}-y-reverse}: 0;
        #{$property-top}: calc(
            #{$negative-prefix}#{$set-value} *
              calc(1 - var(#{--#{$selector-name}-y-reverse}))
          )
          #{if($important, !important, null)};
        #{$property-bottom}: calc(
            #{$negative-prefix}#{$set-value} *
              var(#{--#{$selector-name}-y-reverse})
          )
          #{if($important, !important, null)};
      }
    }
  }

  @each $set-key, $set-value in $set {
    #{$selector}#{$variant}#{$variant-separator}#{$negative-prefix}#{$prefix}#{$selector-name}#{-x}#{$separator}#{$set-key}#{$pseudo-separator}#{$pseudo} {
      > :not([hidden]) ~ :not([hidden]) {
        #{--#{$selector-name}-x-reverse}: 0;
        #{$property-right}: calc(
            #{$negative-prefix}#{$set-value} *
              var(#{--#{$selector-name}-x-reverse})
          )
          #{if($important, !important, null)};
        #{$property-left}: calc(
            #{$negative-prefix}#{$set-value} *
              calc(1 - var(#{--#{$selector-name}-x-reverse}))
          )
          #{if($important, !important, null)};
      }
    }
  }

  @if not $negative {
    #{$selector}#{$variant}#{$variant-separator}#{$prefix}#{$selector-name}#{-y-reverse}#{$pseudo-separator}#{$pseudo} {
      > :not([hidden]) ~ :not([hidden]) {
        #{--#{$selector-name}-y-reverse}: 1;
      }
    }

    #{$selector}#{$variant}#{$variant-separator}#{$prefix}#{$selector-name}#{-x-reverse}#{$pseudo-separator}#{$pseudo} {
      > :not([hidden]) ~ :not([hidden]) {
        #{--#{$selector-name}-x-reverse}: 1;
      }
    }
  }
}

@mixin generate-between(
  $prefix: map.get(config.$core, 'prefix'),
  $important: map.get(config.$core, 'important'),
  $variant-separator: map.get(config.$core, 'separator'),
  $breakpoints: map.get(config.$theme, 'breakpoints'),
  $pseudo-separator: ':',
  $set: null,
  $variants: null,
  $pseudo: null,
  $positive: true,
  $negative: true,
  $utilities: true,
  $selector-name: null,
  $property-left: null,
  $property-right: null,
  $property-top: null,
  $property-bottom: null
) {
  @if $utilities {
    $responsive: list.index($variants, 'responsive');
    $variants-list: if(
      $responsive,
      functions.remove-value($variants, 'responsive'),
      $variants
    );

    @if $positive {
      @include _between(
        $set: $set,
        $prefix: $prefix,
        $important: $important,
        $selector-name: $selector-name,
        $property-left: $property-left,
        $property-right: $property-right,
        $property-top: $property-top,
        $property-bottom: $property-bottom
      );

      @if $variants {
        @each $variant in $variants-list {
          @include _between(
            $set: $set,
            $prefix: $prefix,
            $variant: $variant,
            $variant-separator: $variant-separator,
            $pseudo-separator: $pseudo-separator,
            $pseudo: $variant,
            $important: $important,
            $selector-name: $selector-name,
            $property-left: $property-left,
            $property-right: $property-right,
            $property-top: $property-top,
            $property-bottom: $property-bottom
          );
        }
      }
    }

    @if $negative {
      @include _between(
        $set: $set,
        $prefix: $prefix,
        $negative: $negative,
        $important: $important,
        $selector-name: $selector-name,
        $property-left: $property-left,
        $property-right: $property-right,
        $property-top: $property-top,
        $property-bottom: $property-bottom
      );

      @if $variants {
        @each $variant in $variants-list {
          @include _between(
            $set: $set,
            $prefix: $prefix,
            $negative: $negative,
            $variant: $variant,
            $variant-separator: $variant-separator,
            $pseudo-separator: $pseudo-separator,
            $pseudo: $variant,
            $important: $important,
            $selector-name: $selector-name,
            $property-left: $property-left,
            $property-right: $property-right,
            $property-top: $property-top,
            $property-bottom: $property-bottom
          );
        }
      }
    }

    @if $responsive {
      @each $breakpoint in map.keys($breakpoints) {
        @include media-queries.media($from: $breakpoint) {
          @if $positive {
            @include _between(
              $set: $set,
              $prefix: $prefix,
              $variant: $breakpoint,
              $variant-separator: $variant-separator,
              $important: $important,
              $selector-name: $selector-name,
              $property-left: $property-left,
              $property-right: $property-right,
              $property-top: $property-top,
              $property-bottom: $property-bottom
            );

            @if $variants {
              @each $variant in $variants-list {
                @include _between(
                  $set: $set,
                  $prefix: $prefix,
                  $variant: #{$breakpoint}#{$variant-separator}#{$variant},
                  $variant-separator: $variant-separator,
                  $pseudo-separator: $pseudo-separator,
                  $pseudo: $variant,
                  $important: $important,
                  $selector-name: $selector-name,
                  $property-left: $property-left,
                  $property-right: $property-right,
                  $property-top: $property-top,
                  $property-bottom: $property-bottom
                );
              }
            }
          }

          @if $negative {
            @include _between(
              $set: $set,
              $prefix: $prefix,
              $negative: $negative,
              $variant: $breakpoint,
              $variant-separator: $variant-separator,
              $important: $important,
              $selector-name: $selector-name,
              $property-left: $property-left,
              $property-right: $property-right,
              $property-top: $property-top,
              $property-bottom: $property-bottom
            );

            @if $variants {
              @each $variant in $variants-list {
                @include _between(
                  $set: $set,
                  $prefix: $prefix,
                  $negative: $negative,
                  $variant: #{$breakpoint}#{$variant-separator}#{$variant},
                  $variant-separator: $variant-separator,
                  $pseudo-separator: $pseudo-separator,
                  $pseudo: $variant,
                  $important: $important,
                  $selector-name: $selector-name,
                  $property-left: $property-left,
                  $property-right: $property-right,
                  $property-top: $property-top,
                  $property-bottom: $property-bottom
                );
              }
            }
          }
        }
      }
    }
  }
}
