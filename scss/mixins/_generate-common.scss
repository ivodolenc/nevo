@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use '../config';
@use '../functions';
@use 'media-queries';

@mixin _common(
  $selector: '.',
  $prefix: null,
  $rules: null,
  $variant: null,
  $pseudo: null,
  $important: null,
  $variant-separator: null,
  $pseudo-separator: null,
  $between: null
) {
  $between: if($between, ' > :not([hidden]) ~ :not([hidden])', null);

  @each $selector-name, $declaration in $rules {
    #{$selector}#{$variant}#{$variant-separator}#{$prefix}#{$selector-name}#{$pseudo-separator}#{$pseudo}#{$between} {
      @each $property, $value in $declaration {
        #{$property}: #{$value} #{if($important, !important, null)};
      }
    }
  }
}

@mixin generate-common(
  $prefix: map.get(config.$core, 'prefix'),
  $important: map.get(config.$core, 'important'),
  $variant-separator: map.get(config.$core, 'separator'),
  $breakpoints: map.get(config.$theme, 'breakpoints'),
  $pseudo-separator: ':',
  $rules: null,
  $variants: null,
  $pseudo: null,
  $default: true,
  $utilities: true,
  $between: false
) {
  @if $utilities {
    $responsive: list.index($variants, 'responsive');
    $variants-type: meta.type-of($variants) ==
      'string' or
      meta.type-of($variants) ==
      'list';
    $variants-list: if(
      $responsive,
      functions.remove-value($variants, 'responsive'),
      $variants
    );

    @if $default {
      @include _common(
        $rules: $rules,
        $prefix: $prefix,
        $important: $important,
        $between: $between
      );
    }

    @if $variants-type {
      @each $variant in $variants-list {
        @include _common(
          $prefix: $prefix,
          $rules: $rules,
          $variant: $variant,
          $variant-separator: $variant-separator,
          $pseudo-separator: $pseudo-separator,
          $pseudo: $variant,
          $important: $important,
          $between: $between
        );
      }
    }

    @if $responsive {
      @each $breakpoint in map.keys($breakpoints) {
        @include media-queries.media($from: $breakpoint) {
          @if $default {
            @include _common(
              $prefix: $prefix,
              $rules: $rules,
              $variant: $breakpoint,
              $variant-separator: $variant-separator,
              $important: $important,
              $between: $between
            );
          }

          @if $variants-type {
            @each $variant in $variants-list {
              @include _common(
                $prefix: $prefix,
                $rules: $rules,
                $variant: #{$breakpoint}#{$variant-separator}#{$variant},
                $variant-separator: $variant-separator,
                $pseudo-separator: $pseudo-separator,
                $pseudo: $variant,
                $important: $important,
                $between: $between
              );
            }
          }
        }
      }
    }
  }
}
